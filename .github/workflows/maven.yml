# This workflow is a more comprehensive CI/CD pipeline for a Java Spring Boot application.
# It includes distinct stages for building, testing, and deploying to multiple environments.

name: gitDemo

# This workflow is triggered on pushes to the main branch or any feature branch,
# and on pull requests to the main branch.
on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

# The 'jobs' section defines a series of jobs that make up the pipeline.
jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Maven Build
        # The '-DskipTests' flag builds the app without running tests,
        # as tests will be handled in a separate job.
        run: mvn clean package -DskipTests

      - name: Upload Build Artifact
        # Upload the packaged JAR file to be used by other jobs in the workflow.
        uses: actions/upload-artifact@v3
        with:
          name: gitDemo
          path: target/*.jar
          
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully.
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@av3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Download Build Artifact
        # Download the JAR file created in the 'build' job.
        uses: actions/download-artifact@v3
        with:
          name: spring-boot-app
          path: target/

      - name: Maven Test
        # Run the unit and integration tests. If any test fails, this job will fail.
        run: mvn test
        
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test # This job depends on the 'test' job completing successfully.
    
    # This job runs for pushes to the main branch, or if a pull request is merged.
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request' && github.event.pull_request.merged == true
    
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-boot-app
          path: target/

      - name: Deploy Staging
        run: |
          echo "Deploying the application to the staging environment..."
          # Add your staging deployment commands here (e.g., SSH, Docker, etc.)
          echo "Staging deployment complete!"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging # This job depends on the 'deploy-staging' job completing successfully.
    
    # This job only runs for pushes directly to the main branch.
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-boot-app
          path: target/
          
      - name: Deploy Production
        run: |
          echo "Deploying the application to the production environment..."
          # Add your production deployment commands here.
          echo "Production deployment complete!"
